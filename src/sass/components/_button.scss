@use "../abstracts/" as *;

.button {
    display: inline-flex;
    cursor: pointer;
    text-decoration: none;
    line-height: $button-line-height;
    transform: $button-text-transform;
    font-family: $button-font-family;
    font-size: $button-font-size;
    border: $button-border;
    border-radius: $button-border-radius;
    font-weight: $button-font-weight;
    padding: $button-padding-block $button-padding-inline;
    transition: 275ms ease;

    &[data-type="primary"] {
        background-color: $button-primary-background-color;
        color: $button-primary-text-color;

        :is(:hover, :focus) {
            --outline-size: 2px;

            background-color: $button-primary-background-color-hover;
            color: $button-primary-text-color-hover;
            outline: var(--outline-size) solid $button-primary-outline-color-hover;
            outline-offset: calc(var(--outline-size) * -1);
        }
    }

    &[data-type="secondary"] {
        background-color: $button-secondary-background-color;
        color: $button-secondary-text-color;
        text-decoration: underline;
        text-decoration-color: $button-secondary-underline-color;

        :is(:hover, :focus) {
            color: $button-secondary-text-color-hover;
            text-decoration-color: $button-secondary-underline-color-hover;
        }
    }

    &[data-type="accent"] {
        background-color: $color-neutral-400;
        color: $color-neutral-900;
    }

    &[data-type="outline"] {
        --outline-size: 5px;

        background: transparent;
        outline: var(--outline-size) solid $color-neutral-100;
        outline-offset: calc(var(--outline-size) * -1);
        color: $color-neutral-100;
    }

    &:is(:hover, :focus) {
        background: $color-neutral-100;
        color: $color-neutral-900;
    }
}
